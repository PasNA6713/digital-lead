{"remainingRequest":"C:\\Users\\John-\\Projects\\Frontend\\VueProjects\\spb-alert-system\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\John-\\Projects\\Frontend\\VueProjects\\spb-alert-system\\src\\components\\Map.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\John-\\Projects\\Frontend\\VueProjects\\spb-alert-system\\src\\components\\Map.vue","mtime":1605341472851},{"path":"C:\\Users\\John-\\Projects\\Frontend\\VueProjects\\spb-alert-system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\John-\\Projects\\Frontend\\VueProjects\\spb-alert-system\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\John-\\Projects\\Frontend\\VueProjects\\spb-alert-system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\John-\\Projects\\Frontend\\VueProjects\\spb-alert-system\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQge21hcEdldHRlcnMsIG1hcE11dGF0aW9uc30gZnJvbSAndnVleCcNCg0KICAgIGV4cG9ydCBkZWZhdWx0ew0KICAgICAgICBkYXRhOiAoKSA9PiAoew0KICAgICAgICAgICAgcGxhY2VtYXJrczogew0KICAgICAgICAgICAgICAgICJ0eXBlIjogIkZlYXR1cmVDb2xsZWN0aW9uIiwNCiAgICAgICAgICAgICAgICAiZmVhdHVyZXMiOiBbDQogICAgICAgICAgICAgICAgICAgIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6ICdGZWF0dXJlJywNCiAgICAgICAgICAgICAgICAgICAgICAgIGlkOiAzLA0KICAgICAgICAgICAgICAgICAgICAgICAgZ2VvbWV0cnk6IHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAnUG9pbnQnLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvb3JkaW5hdGVzOiBbNTkuOSwgMzAuNTVdDQogICAgICAgICAgICAgICAgICAgICAgICB9LA0KICAgICAgICAgICAgICAgICAgICAgICAgcHJvcGVydGllczogew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhpbnRDb250ZW50OiAn0KHQvtC00LXRgNC20LDQvdC40LUg0LLRgdC/0LvRi9Cy0LDRjtGJ0LXQuSDQv9C+0LTRgdC60LDQt9C60LgnLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJhbGxvb25Db250ZW50OiAn0KHQvtC00LXRgNC20LDQvdC40LUg0LHQsNC70YPQvdCwJw0KICAgICAgICAgICAgICAgICAgICAgICAgfSwNCiAgICAgICAgICAgICAgICAgICAgICAgIG9wdGlvbnM6IHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcmVzZXQ6ICJpc2xhbmRzI2RvdEljb24iLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGljb25Db2xvcjogImJsdWUiDQogICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIH0gICANCiAgICAgICAgICAgICAgICBdLA0KICAgICAgICAgICAgfSwNCiAgICAgICAgICAgIG15TWFwOiBudWxsLA0KICAgICAgICAgICAgb2JqZWN0TWFuYWdlcjogbnVsbCwNCg0KICAgICAgICAgICAgbWVzc2FnZXM6IG51bGwsDQogICAgICAgICAgICBjbGFzc2lmaWVyOiB7DQogICAgICAgICAgICAgICAgMTogJ3llbGxvdycsDQogICAgICAgICAgICAgICAgMjogJ2JsdWUnLA0KICAgICAgICAgICAgICAgIDM6ICdyZWQnDQogICAgICAgICAgICB9DQogICAgICAgICAgICB9KSwNCiAgICAgICAgICAgICAgbWV0aG9kczogew0KICAgICAgICAgICAgLi4ubWFwTXV0YXRpb25zKFsidXBkYXRlTWVzc2FnZXMiXSkNCiAgICAgICAgfSwNCiAgICAgICAgY29tcHV0ZWQ6ew0KICAgICAgICAgICAgDQogICAgICAgIH0sDQoNCiAgICAgICAgY3JlYXRlZCgpIHsNCiAgICAgICAgICAgIGF4aW9zDQogICAgICAgICAgLmdldCgnaHR0cHM6Ly80NmM2MGE2OTY2MDkubmdyb2suaW8vbWVzc2FnZS9nZXQvP2Rhbmdlcj0xJykNCiAgICAgICAgICAudGhlbigocmVzcG9uc2UpID0+IHsNCiAgICAgICAgICAgICAgdGhpcy5tZXNzYWdlcyA9IHJlc3BvbnNlLmRhdGFbImRhdGEiXQ0KICAgICAgICAgICAgICAgIGZvciAobGV0IGk9MDtpPHRoaXMubWVzc2FnZXMubGVuZ3RoO2krKyl7DQogICAgICAgICAgICB0aGlzLnBsYWNlbWFya3NbImZlYXR1cmVzIl0ucHVzaCh7DQoNCiAgICAgICAgICAgIHR5cGU6ICdGZWF0dXJlJywNCiAgICAgICAgICAgIGlkOiB0aGlzLm1lc3NhZ2VzW2ldWyJpZCJdLA0KICAgICAgICAgICAgZ2VvbWV0cnk6IHsNCiAgICAgICAgICAgICAgICB0eXBlOiAnUG9pbnQnLA0KICAgICAgICAgICAgICAgIGNvb3JkaW5hdGVzOiBbdGhpcy5tZXNzYWdlc1tpXVsiYWRkcmVzcyJdWyJsYXRpdHVkZSJdLCB0aGlzLm1lc3NhZ2VzW2ldWyJhZGRyZXNzIl1bImxvbmd0aXR1ZGUiXV0NCiAgICAgICAgICAgIH0sDQogICAgICAgICAgICBwcm9wZXJ0aWVzOiB7DQogICAgICAgICAgICAgICAgaGludENvbnRlbnQ6IHRoaXMubWVzc2FnZXNbaV1bImRhdGUiXSwNCiAgICAgICAgICAgICAgICBiYWxsb29uQ29udGVudDogdGhpcy5tZXNzYWdlc1tpXVsidGV4dCJdDQogICAgICAgICAgICB9LA0KICAgICAgICAgICAgb3B0aW9uczogew0KICAgICAgICAgICAgICAgIHByZXNldDogImlzbGFuZHMjZG90SWNvbiIsDQogICAgICAgICAgICAgICAgaWNvbkNvbG9yOiB0aGlzLmNsYXNzaWZpZXJbdGhpcy5tZXNzYWdlc1tpXVsiZGFuZ2VyX2xldmVsIl1dDQogICAgICAgICAgICB9DQogICAgICAgIH0pDQoNCg0KICAgICAgICB9DQogICAgICAgICAgICB0aGlzLnVwZGF0ZU1lc3NhZ2VzKHRoaXMubWVzc2FnZXMpDQoNCiAgICAgICAgICAgIHltYXBzLnJlYWR5KCgpID0+IHsNCiAgICAgICAgICAgICAgICB0aGlzLm15TWFwID0gbmV3IHltYXBzLk1hcCgibWFwIiwgew0KICAgICAgICAgICAgICAgICAgICBjZW50ZXI6IFs1OS45MzcwLCAzMC4zMDg5XSwNCiAgICAgICAgICAgICAgICAgICAgem9vbTogMTAsDQogICAgICAgICAgICAgICAgICAgIGNvbnRyb2xzOiBbJ3pvb21Db250cm9sJ10sIA0KICAgICAgICAgICAgICAgICAgICBiZWhhdmlvcnM6IFsnZHJhZycsICdzY3JvbGxab29tJ10NCiAgICAgICAgICAgICAgICB9LCB7DQogICAgICAgICAgICAgICAgICAgIHNlYXJjaENvbnRyb2xQcm92aWRlcjogJ3lhbmRleCNzZWFyY2gnDQogICAgICAgICAgICAgICAgfSkNCg0KICAgICAgICAgICAgICAgIHRoaXMub2JqZWN0TWFuYWdlciA9IG5ldyB5bWFwcy5PYmplY3RNYW5hZ2VyKHsNCiAgICAgICAgICAgICAgICAgICAgY2x1c3Rlcml6ZTogdHJ1ZSwNCiAgICAgICAgICAgICAgICAgICAgZ3JpZFNpemU6IDMyLA0KICAgICAgICAgICAgICAgICAgICBjbHVzdGVyRGlzYWJsZUNsaWNrWm9vbTogdHJ1ZQ0KICAgICAgICAgICAgICAgIH0pDQogICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgdGhpcy5vYmplY3RNYW5hZ2VyLmNsdXN0ZXJzLm9wdGlvbnMuc2V0KCdwcmVzZXQnLCAnaXNsYW5kcyNyZWRDbHVzdGVySWNvbnMnKQ0KICAgICAgICAgICAgICAgIHRoaXMub2JqZWN0TWFuYWdlci5hZGQodGhpcy5wbGFjZW1hcmtzKQ0KDQogICAgICAgICAgICAgICAgdGhpcy5teU1hcC5nZW9PYmplY3RzLmFkZCh0aGlzLm9iamVjdE1hbmFnZXIpDQoNCg0KICAgICAgICAgICAgICAgIHRoaXMubXlNYXAuZ2VvT2JqZWN0cy5ldmVudHMuYWRkKCdjbGljaycsIGZ1bmN0aW9uIChlKSB7DQogICAgICAgICAgICAgICAgICAgIGxldCB0YXJnZXQgPSBlLmdldCgnb2JqZWN0SWQnKTsNCiAgICAgICAgICAgICAgICAgICAgY29uc3QgY2x1c3RlciA9IHRoaXMub2JqZWN0TWFuYWdlci5jbHVzdGVycy5nZXRCeUlkKHRhcmdldCkNCiAgICAgICAgICAgICAgICAgICAgaWYgKGNsdXN0ZXIpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IG9iamVjdHMgPSBjbHVzdGVyLnByb3BlcnRpZXMuZ2VvT2JqZWN0cw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfSkNCiAgICAgICAgICAgIH0pDQogICAgICAgIH0pDQogICAgICAgIH0NCiAgICAgICAgDQogIH0NCg=="},{"version":3,"sources":["Map.vue"],"names":[],"mappings":";;;;;;;;;AASA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"Map.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <div>\r\n        <br>\r\n        <div class=\"border primary-border\" id=\"map\"></div>\r\n        <br>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport {mapGetters, mapMutations} from 'vuex'\r\n\r\n    export default{\r\n        data: () => ({\r\n            placemarks: {\r\n                \"type\": \"FeatureCollection\",\r\n                \"features\": [\r\n                    {\r\n                        type: 'Feature',\r\n                        id: 3,\r\n                        geometry: {\r\n                            type: 'Point',\r\n                            coordinates: [59.9, 30.55]\r\n                        },\r\n                        properties: {\r\n                            hintContent: 'Содержание всплывающей подсказки',\r\n                            balloonContent: 'Содержание балуна'\r\n                        },\r\n                        options: {\r\n                            preset: \"islands#dotIcon\",\r\n                            iconColor: \"blue\"\r\n                        }\r\n                    }   \r\n                ],\r\n            },\r\n            myMap: null,\r\n            objectManager: null,\r\n\r\n            messages: null,\r\n            classifier: {\r\n                1: 'yellow',\r\n                2: 'blue',\r\n                3: 'red'\r\n            }\r\n            }),\r\n              methods: {\r\n            ...mapMutations([\"updateMessages\"])\r\n        },\r\n        computed:{\r\n            \r\n        },\r\n\r\n        created() {\r\n            axios\r\n          .get('https://46c60a696609.ngrok.io/message/get/?danger=1')\r\n          .then((response) => {\r\n              this.messages = response.data[\"data\"]\r\n                for (let i=0;i<this.messages.length;i++){\r\n            this.placemarks[\"features\"].push({\r\n\r\n            type: 'Feature',\r\n            id: this.messages[i][\"id\"],\r\n            geometry: {\r\n                type: 'Point',\r\n                coordinates: [this.messages[i][\"address\"][\"latitude\"], this.messages[i][\"address\"][\"longtitude\"]]\r\n            },\r\n            properties: {\r\n                hintContent: this.messages[i][\"date\"],\r\n                balloonContent: this.messages[i][\"text\"]\r\n            },\r\n            options: {\r\n                preset: \"islands#dotIcon\",\r\n                iconColor: this.classifier[this.messages[i][\"danger_level\"]]\r\n            }\r\n        })\r\n\r\n\r\n        }\r\n            this.updateMessages(this.messages)\r\n\r\n            ymaps.ready(() => {\r\n                this.myMap = new ymaps.Map(\"map\", {\r\n                    center: [59.9370, 30.3089],\r\n                    zoom: 10,\r\n                    controls: ['zoomControl'], \r\n                    behaviors: ['drag', 'scrollZoom']\r\n                }, {\r\n                    searchControlProvider: 'yandex#search'\r\n                })\r\n\r\n                this.objectManager = new ymaps.ObjectManager({\r\n                    clusterize: true,\r\n                    gridSize: 32,\r\n                    clusterDisableClickZoom: true\r\n                })\r\n                \r\n                this.objectManager.clusters.options.set('preset', 'islands#redClusterIcons')\r\n                this.objectManager.add(this.placemarks)\r\n\r\n                this.myMap.geoObjects.add(this.objectManager)\r\n\r\n\r\n                this.myMap.geoObjects.events.add('click', function (e) {\r\n                    let target = e.get('objectId');\r\n                    const cluster = this.objectManager.clusters.getById(target)\r\n                    if (cluster) {\r\n                        const objects = cluster.properties.geoObjects\r\n                    }\r\n                })\r\n            })\r\n        })\r\n        }\r\n        \r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n#map{\r\n    width: 800px; \r\n    height: 660px;\r\n    margin-left: 30px;\r\n}\r\n</style>"]}]}